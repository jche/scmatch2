---
title: "Generate Toy Examples with Varying Levels of Covariate Overlap"
format: html
editor: visual
---

## Construct toy example with different level of overlaps

```{r message=FALSE}
library(tidyverse)
library(latex2exp)
source("R/sim_data.R")
source("R/wrappers.R")
source("R/diagnostic_plots.R")
```

```{r}
# generate the data
toy_1 <- gen_one_toy()

# plot the data
create_toy_df_plot(toy_1)
```

### generate the data with different overlap

The ctr_dist parameter varies from 0 to 1. Lower means better overlap

Instead of implementing a kind of measure, Xiang decides to assess covariate balance by visual plots.

```{r}
toy_2 <- gen_one_toy(ctr_dist = 0.3)
# plot the data
create_toy_df_plot(toy_2)
```

```{r}
toy_3 <- gen_one_toy(ctr_dist = 0.1)
# plot the data
create_toy_df_plot(toy_3)
```

Indeed, as ctr_dist varies from default value of 0.5 to 0.1, the control and treatment points get closer to each other, showing increasing overlap.

Hence, we will proceed to investigate naive bootstrap on ctr_dist = 0.5 (low overlap), ctr_dist = 0.3 (medium overlap), ctr_dist = 0.5 (high overlap)

## Assess overlap of KS

Start by assesssing V
```{r warning=FALSE}
source("R/sim_data.R")
ks_1 <- gen_df_kang(n=1000)
# Manually assign V1, V2 to X1, X2 because create_toy_df_plot only plots variables X1, X2 of a dataset
ks_1[,c("X1", "X2")] <- ks_1[,c("V1", "V2")]
create_toy_df_plot(ks_1)
```
Looks like it has high overlap
