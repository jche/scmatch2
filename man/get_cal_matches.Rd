% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cal_matches.R
\name{get_cal_matches}
\alias{get_cal_matches}
\title{Caliper Synthetic Matching}
\usage{
get_cal_matches(
  df,
  covs = starts_with("X"),
  treatment = "Z",
  metric = c("maximum", "euclidean", "manhattan"),
  caliper = 1,
  rad_method = c("adaptive", "fixed", "1nn", "adaptive-5nn", "knn"),
  est_method = c("scm", "scm_extrap", "average"),
  scaling = default_scaling(df, covs),
  id_name = "id",
  warn = TRUE,
  k = 5
)
}
\arguments{
\item{df}{The data frame of data to be matched. Must contain treatment
indicator and covariates for matching.}

\item{covs}{Specification of covariates to use for matching. Can be variable
names or tidyselect helpers like \code{starts_with("X")}. Defaults to
variables starting with "X".}

\item{treatment}{Name of the column in \code{df} containing the treatment
indicator (0/1 or TRUE/FALSE). Defaults to "Z".}

\item{metric}{A string specifying the distance metric. One of
"maximum", "euclidean", or "manhattan".}

\item{caliper}{A numeric specifying the caliper size for matching.
Controls the maximum allowable distance between matched units.}

\item{rad_method}{Method to determine the radius size for each treated unit.
Options include:
\itemize{
\item "adaptive": Uses the maximum of the caliper and the distance to nearest control
\item "fixed": Uses the specified caliper value
\item "1nn": Uses the distance to the nearest neighbor
\item "adaptive-5nn": Adaptive radius with cap at 5th nearest neighbor
\item "knn": Uses the distance to the kth nearest neighbor
}}

\item{est_method}{Method for estimating weights for control units.
Options include:
\itemize{
\item "scm": Synthetic control method weighting
\item "scm_extrap": Synthetic control with extrapolation
\item "average": Simple average weighting
}}

\item{scaling}{A vector of scaling constants for covariates (can
also be a single row matrix). These are often just the inverses
of covariate-specific standard deviations. Controls the relative
importance of different covariates in the distance calculation.}

\item{id_name}{Name of column to look for ID values. If that
column is not found, a canonical \code{id} corresponding to row
numbers will be created.}

\item{warn}{A logical indicating whether to warn about dropped
units (those that cannot be matched within the caliper).}

\item{k}{Integer specifying the number of neighbors to use when
\code{rad_method = "knn"}.}
}
\value{
An S3 object of class "csm_matches" containing:
\itemize{
\item \code{matches}: A list of data frames, each containing matched control units for a treated unit
\item \code{adacalipers}: Vector of adaptive calipers for each treated unit
\item \code{dm_trimmed}: Distance matrix with control units farther than caliper set to NA
\item \code{dm_uncapped}: Original distance matrix without censoring
\item \code{treatment_table}: Table of treated units with matching information
}
The object also has attributes storing the settings used for matching.
}
\description{
This is the core method of the CSM package. Conduct (adaptive)
radius matching with optional synthetic step on the resulting sets
of controls. The function creates a matched dataset by finding control
units that are similar to treatment units based on specified covariates
and distance metrics, then optionally weights these controls using synthetic
control methods.
}
\examples{
# Generate example data
set.seed(4044440)
dat <- gen_one_toy(nt = 5)

# Perform matching
mtch <- get_cal_matches(dat,
                        metric = "maximum",
                        scaling = c(1/0.2, 1/0.2),
                        caliper = 1,
                        rad_method = "adaptive",
                        est_method = "scm")

# View matching results
mtch

# Convert to data frame
as.data.frame(mtch)

}
\seealso{
\code{\link{gen_matches}} for the underlying matching function,
\code{\link{est_weights}} for weight calculation,
\code{\link{result_table}} for extracting results
}
